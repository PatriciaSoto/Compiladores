Instrucciones aritméticas:

x= z +2 *8 -(a/b)-x

t0 = 2 * 8
t1 = (a / b)
t2 = t0 – t1
t3 = z + t2
t4 = t3 – x
x = t4

int x(6); ... x[j+j*2] = a * 3 /6;

t0 = a * 3
t1 = t0 / 6
t2 = j * 2
t3 = j + t2
t4 = t3 * 4
x[t4] = t1

int x[6], y[5][3][2]; ... x[j+j*2] = y[i+2][[j-1][k*3];

t0 = i + 2
t1 = t0 * 24
t2 = j – 1
t3 = t2 * 8
t4 = t3 + t1
t5 = k * 3
t6 = t5 * 4
t7 = t6 + t4
t8 = j * 2
t9 = j + t8
t10 = t9 * 4
x[t10] = y [t7]

Instrucciones if, if-else, while, do-while

if( x[i+2] > x[i-1]) a = z*3+y; else a = 2;

t0 = i + 1
t1 = t0 * 4
t2 = x[t1]
t3 = i – 1
t4 = t3 * 4
t5 = x[t4]
if t2 > t5 goto L0
goto L1
L0:	 t6 = 3 + y
	t7 = z * t6
	a = t7
	goto L2
L1: 	a = 2
L2: …

while( x[i+2] > x[i-1]) {if(y < 3) y =1; else y=0; }

L0: 	t0 = i + 2
	t1 = t0 * 4
	t2 = x[t1]
	t3 = i – 1
	t4 = t3 * 4
	t5 = x[t4]
	if t2 > t5 goto L1
	goto L2
	L1: 	if y < 3 goto L3
		goto L4
		L3: y = 1
		L4: y = 0
	L2: …
  
do i++; j++; while(x >z*5);

L1: 	t0 = i + 1
	i = t0
	t1 = j + 1
	j = t1
	t2 = z * 5
	if x > t2 goto L1
	goto L2
L2: … 
